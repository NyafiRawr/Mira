import { Collection, Message, MessageEmbed } from 'discord.js';
import { randomInteger, randomBoolean, separateThousandth } from '../../utils';
import * as economy from '../../modules/economy';
import * as users from '../../modules/users';
import config from '../../config';

const body = {
  author: {
    name: '–°–ª–æ—Ç-–º–∞—à–∏–Ω–∞',
  },
};

const means = ['üçî', 'üçï', 'üçú', 'üçü', 'üç∞'];

// serverId_userId, currency
const bank = new Collection<string, number>();

module.exports = {
  name: __filename.slice(__dirname.length + 1).split('.')[0],
  description: '–°–ª–æ—Ç-–º–∞—à–∏–Ω–∞, —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –∏ —É–¥–∞—á–∞ :strawberry:',
  aliases: ['slots'],
  usage: '[take –ò–õ–ò bonus]',
  cooldown: {
    seconds: 0.5,
  },
  group: __dirname.split(/[\\/]/)[__dirname.split(/[\\/]/).length - 1],
  async execute(message: Message, args: string[]) {
    const embed = new MessageEmbed(body);
    let virtualCurrency: number =
      bank.get(`${message.guild!.id}_${message.author.id}`) || 0;

    if (args.length === 0) {
      const rep = (await users.get(message.guild!.id, message.author.id))
        .reputation;
      return message.channel.send(
        embed
          .setColor('#ff8040')
          .setTitle('–ò–≥—Ä–æ–≤–æ–π –∞–≤—Ç–æ–º–∞—Ç')
          .setDescription(
            '–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ (—Å—Ç–æ–ª–±—Ü—ã: 1,2,3) `1 = 2 = 3`, `1 = 2` –∏–ª–∏ `1 = 3` –∏–ª–∏ `2 = 3`, –æ—Å—Ç–∞–ª—å–Ω–æ–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–ª—É—á–∞–π–Ω–æ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –±–æ–Ω—É—Å–∞ "–£–¥–∞—á–∞"!'
          )
          .addField(
            '–ö–æ–º–∞–Ω–¥—ã',
            `\`${config.discord.prefix}${this.name} <—Å—Ç–∞–≤–∫–∞>\` - –∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã (—Å—Ç–∞–≤–∫–∞ –±–µ—Ä—ë—Ç—Å—è –∏–∑ :strawberry:, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç, —Ç–æ 1:cookie: -> 1:strawberry:)` +
              `\n\`${config.discord.prefix}${
                this.name
              } take\` - –∑–∞–±—Ä–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à (${separateThousandth(
                config.games.slots.convertCookie.toString()
              )}:strawberry: -> 1:cookie:)` +
              `\n\`${config.discord.prefix}${
                this.name
              } bonus\` - –∑–∞–±—Ä–∞—Ç—å —Ö–∞–ª—è–≤–Ω—ã–µ 20-${100 + rep}:strawberry:`
          )
          .setFooter(
            `–ù–∞ —Å—á–µ—Ç—É: ${separateThousandth(
              virtualCurrency.toString()
            )}üçì | –ú–∞–∫—Å–∏–º—É–º: ${separateThousandth(
              config.games.slots.limitVirtualCurrency.toString()
            )}üçì`
          )
      );
    }

    if (args.join() === 'take') {
      if (virtualCurrency < config.games.slots.convertCookie) {
        throw new Error(
          `–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: ${separateThousandth(
            config.games.slots.convertCookie.toString()
          )}:strawberry:`
        );
      }

      const cookie = Math.floor(
        virtualCurrency / config.games.slots.convertCookie
      );
      virtualCurrency %= config.games.slots.convertCookie;

      bank.set(`${message.guild!.id}_${message.author.id}`, virtualCurrency);
      await economy.setBalance(message.guild!.id, message.author.id, cookie);

      return message.channel.send(
        embed
          .setColor('#0080c0')
          .setTitle('–ö–æ–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç—ã')
          .setDescription(
            `${separateThousandth(
              (cookie * config.games.slots.convertCookie).toString()
            )}:strawberry: -> ${separateThousandth(cookie.toString())}:cookie:`
          )
          .addField(
            '–û—Å—Ç–∞—Ç–æ–∫',
            `${separateThousandth(virtualCurrency.toString())}:strawberry:`
          )
      );
    }

    if (virtualCurrency > config.games.slots.limitVirtualCurrency) {
      throw new Error(
        '–¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ø—Ä–µ–¥–µ–ª :strawberry:, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É –≤—ã–≤–æ–¥–∞, —á—Ç–æ–±—ã –∑–∞–±—Ä–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à.'
      );
    }

    if (args.join() === 'bonus') {
      const rep = (await users.get(message.guild!.id, message.author.id))
        .reputation;

      const bonus = randomInteger(20, 100 + rep);
      virtualCurrency += bonus;

      bank.set(`${message.guild!.id}_${message.author.id}`, virtualCurrency);

      return message.reply(`—Ç–µ–±–µ –≤—ã–ø–∞–ª–æ +${bonus}:strawberry:`);
    }

    // –°—Ç–∞–≤–∫–∞
    const bet = parseInt(args.join(), 10);
    if (Number.isInteger(bet) === false) {
      throw new Error('—Å—Ç–∞–≤–∫–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞ –∏–ª–∏ —É–∫–∞–∑–∞–Ω–∞ –Ω–µ –≤–µ—Ä–Ω–æ.');
    } else if (bet <= 2) {
      throw new Error('—Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∞—è —Å—Ç–∞–≤–∫–∞.');
    }

    if (virtualCurrency < bet) {
      const enoughtCookie = virtualCurrency - bet;
      await economy.setBalance(
        message.guild!.id,
        message.author.id,
        enoughtCookie
      );
      virtualCurrency += Math.abs(enoughtCookie);
      bank.set(`${message.guild!.id}_${message.author.id}`, virtualCurrency);
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–ª–æ—Ç-–º–∞—à–∏–Ω—É
    const a = randomInteger(0, means.length - 1);
    const b = randomInteger(0, means.length - 1);
    const c = randomInteger(0, means.length - 1);

    let bonusText = '–ë–µ–∑ –±–æ–Ω—É—Å–æ–≤';
    const lucky = randomBoolean();
    if (lucky) {
      bonusText = '–í—ã–ø–∞–ª –±–æ–Ω—É—Å: –£–¥–∞—á–∞!';
    }

    let award = bet;
    // –ö–æ–º–±–∏–Ω–∞—Ü–∏–∏
    if (a == b && b == c) {
      if (lucky) {
        award *= 4;
        embed
          .setTitle('–£—Å–ø–µ—Ö!')
          .setColor('#28ff5f')
          .setDescription('–°—Ç–∞–≤–∫–∞ —É–º–Ω–æ–∂–µ–Ω–∞ –≤ 4 —Ä–∞–∑–∞!')
          .addField(
            bonusText,
            `–ü–æ–ª—É—á–µ–Ω–æ: ${separateThousandth(award.toString())}:strawberry:`
          );
      } else {
        award *= 3;
        embed
          .setTitle('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!')
          .setColor('#28ff5f')
          .setDescription('–°—Ç–∞–≤–∫–∞ —É–º–Ω–æ–∂–µ–Ω–∞ –≤ 3 —Ä–∞–∑–∞!')
          .addField(
            bonusText,
            `–ü–æ–ª—É—á–µ–Ω–æ: ${separateThousandth(award.toString())}:strawberry:`
          );
      }
    } else if (a == b || b == c || a == c) {
      embed.setTitle('–ü–æ—á—Ç–∏ –ø–æ–ª—É—á–∏–ª–æ—Å—å!');
      if (lucky) {
        award *= 2;
        embed
          .setColor('#28ff5f')
          .setDescription('–ù–æ —Å—Ç–∞–≤–∫–∞ –Ω–µ –ø–æ—Ç–µ—Ä—è–Ω–∞ –∏ —É–º–Ω–æ–∂–µ–Ω–∞ –≤ 2 —Ä–∞–∑–∞! ')
          .addField(
            bonusText,
            `–ü–æ–ª—É—á–µ–Ω–æ: ${separateThousandth(award.toString())}:strawberry:`
          );
      } else {
        award = Math.round(award / 2);
        embed
          .setColor('#ffff4f')
          .setDescription('–û—Ç–Ω—è—Ç–∞ —á–∞—Å—Ç—å —Å—Ç–∞–≤–∫–∏')
          .addField(
            bonusText,
            `–ü–æ—Ç–µ—Ä—è–Ω–æ: ${separateThousandth(award.toString())}:strawberry:`
          );
        award = -award;
      }
    } else {
      embed.setTitle('–ù–µ –ø–æ–≤–µ–∑–ª–æ'!);
      if (lucky) {
        award = 1;
        embed
          .setColor('#ffff4f')
          .setDescription('–ò–∑-–∑–∞ –±–æ–Ω—É—Å–∞ —Ç—ã –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ—Ç–µ—Ä—è–ª! ')
          .addField(bonusText, '–î–µ—Ä–∂–∏ :strawberry:!');
      } else {
        embed
          .setColor('#ff4040')
          .setDescription('–ù–∏—á–µ–≥–æ —Å–æ–≤–ø–∞–¥–∞—é—â–µ–≥–æ –Ω–µ –≤—ã–ø–∞–ª–æ')
          .addField(
            bonusText,
            `–ü–æ—Ç–µ—Ä—è–Ω–æ: ${separateThousandth(award.toString())}:strawberry:`
          );
        award = -award;
      }
    }

    virtualCurrency += award;

    bank.set(`${message.guild!.id}_${message.author.id}`, virtualCurrency);

    return message.channel.send(
      `${means[a]}${means[b]}${means[c]}`,
      embed.setFooter(
        `–ù–∞ —Å—á–µ—Ç—É: ${separateThousandth(
          virtualCurrency.toString()
        )}üçì | –°–≥–æ—Ä–∞—é—Ç —Å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π`
      )
    );
  },
};
