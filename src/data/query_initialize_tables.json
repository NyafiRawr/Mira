{
    "users" : "CREATE TABLE IF NOT EXISTS users (     id              BIGINT NOT NULL,     firstEntry      DATETIME,     birthday        DATE,     leaveAmount     SMALLINT DEFAULT 0,     PRIMARY KEY (id) );",
    "economy" : "CREATE TABLE IF NOT EXISTS economy (     idUser          BIGINT NOT NULL, FOREIGN KEY (idUser) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE,     currency        BIGINT DEFAULT 0,     PRIMARY KEY (idUser));",
    "players" : "CREATE TABLE IF NOT EXISTS players (     idUser          BIGINT NOT NULL, FOREIGN KEY (idUser) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,     nickname        VARCHAR(15) NOT NULL,     modes           SET('0','1','2','3') DEFAULT 0,     server          BLOB,     PRIMARY KEY (idUser));",
    "shop" : "CREATE TABLE IF NOT EXISTS shop (     idRole          BIGINT NOT NULL,     price           BIGINT DEFAULT 0,     expire          DATETIME,     PRIMARY KEY (idRole) );",
    "inventory" : "CREATE TABLE IF NOT EXISTS inventory (     idUser          BIGINT, FOREIGN KEY (idUser) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,     items           BLOB,     PRIMARY KEY (idUser));",
    "music" : "CREATE TABLE IF NOT EXISTS music (     idUser          BIGINT, FOREIGN KEY (idUser) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,     playlist        BLOB,     PRIMARY KEY (idUser));",
    "guilds" : "CREATE TABLE IF NOT EXISTS guilds (     id              INT,     idUser          BIGINT, FOREIGN KEY (idUser) REFERENCES users (id) ON DELETE RESTRICT ON UPDATE CASCADE,     name            VARCHAR(255) UNIQUE,     image           VARCHAR(255),     PRIMARY KEY (id));",
    "membership" : "CREATE TABLE IF NOT EXISTS membership (     idUser          BIGINT, FOREIGN KEY (idUser) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,     idGuild         INT, FOREIGN KEY (idGuild) REFERENCES guilds (id) ON DELETE CASCADE ON UPDATE CASCADE);",
    "embeds" : "CREATE TABLE IF NOT EXISTS embeds (     idUser          BIGINT, FOREIGN KEY (idUser) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,     contents        BLOB,     PRIMARY KEY (idUser));",
	"characters" : "CREATE TABLE IF NOT EXISTS characters (     idUser          BIGINT,     class           VARCHAR(255),     level           TINYINT,     idGuild         INT,     background      VARCHAR(255),     PRIMARY KEY (idUser));",
    "access" : "CREATE TABLE IF NOT EXISTS access (     idChannel       BIGINT,     commands        BLOB,     PRIMARY KEY (idChannel) );"
}